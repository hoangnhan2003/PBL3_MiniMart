<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA9VJREFUaEPt
        mGtojXEcx+e6DXPZTBtvMMtsiDaXcltrLSXFXF6QbF7wQkoxxJu9Mu+IvKBoRLIhl7lfcikSyl0pihco
        FCnNJfP5Pv3O0znOWdue85zjnDrf+nT+z+/3v/x+z3me539JSymllFJKa2trS4dqu0wuWfAtsMdMyaOg
        4KXkSoCAA8G/hDNJlQDBZsIleAJDFLwwd2KLQEOCN1tyJECQYcFLCl7YZWKKACPd+ceQB4mdAMH1htOg
        F3YYZENPyDW/EvgKrzrgOegm7IPNUAbdnEFiJQYICd5szVDlVECUZ8DKTrAG6mEXnIcf8A4aYKB155/o
        9N87PwoKzB0mfL2gwsqTQP9UDpSZrQL0z8neAwbAMngGn0AJ+vOP0FGkO18Ly50KEYQvF5qsvA2mwFRo
        MNsxGAxHYA6UgxJVMur7MxyCdNX3LDpQ8KcgcOcLocbcvok+50ElTIMxUABP4RZkWrWui8Z94BoEEhgN
        teb2XfRdA5VWzoKHoH/J++NEYyVxFdxHKNZinEdQBCNA78Q6c3kTHSiJKxCXJBijP2hpogSq4Rvkmdub
        6EAT2GVoNwnss2FjJ1gLiyDfmoYJ3wKos/IN2Os4ohGdBGbhiElg00T2Ee53gGbxD/AHGiHitx+7Pr3F
        MBNaIctc3kUn7SbBdZeWEtTVp1UJvQBnNg8WNn2Z6qA7KOGF5opOdKQkLkJIEpS7vBaivvq6Di1mChH2
        fNDEqGVHo5mjF51lwAVwk+DX02KONsPhJ5SayRU2LVf0CK2GO2b2R3SoJLSWcZIATwlItNOLuskuw4Rv
        PryxS/9Ep8FJeN5S0u4A7LRLV9g2wHrQLN1qZn9Fx0riHEheE1D7ert0ha2voTXTezP7LzrX5v4seHkH
        9Ln8DuVmcoVtK0wALcMfmDk2YgBPB1u02a/gIGzNg00vsJbdO6DZzIkhAhoEB+ELlJjZFbZSWGrl17DC
        ccRTDKr9QFME9LhpjXMPiq16iLBr9VsFE+E3hE12MReDaqa9Cc4nNgglpo1MxKUy9lmw2MraAJ1wHPEW
        AyuBVXbZadFmPEwH7eY0yRWZK75i4C4nQH1torTv1rJaJxi7zRV/MXinE6CeHpsSGAla/5yEu5BhVeIv
        Bu8wAfyTYRxoj6D3oh8ch7cw1Kr9HxGAkwC4BwL86jBLs6smKT3nS2Cu+TRpaUt5G9rd8MRNBBFIwD0Q
        4HcLaNOu73y22cbCYdDGZTtEd6TilwhECSggbU6C0V5XB1g6ndMk9QuOQqE1TQwRkBKIJB1e6dhE33gd
        p+RYk5RSSimlpFNa2l//HtWJUQH7MAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>