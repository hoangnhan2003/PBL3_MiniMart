<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QhTmw/QAAAAASUVORK5CYII=
</value>
  </data>
  <data name="guna2Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>