<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="guna2Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>