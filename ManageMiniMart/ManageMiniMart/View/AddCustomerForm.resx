<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA9VJREFUaEPt
        mGtojXEcx+e6DXPZTBtvMMtsiDaXcltrLSXFXF6QbF7wQkoxxJu9Mu+IvKBoRLIhl7lfcikSyl0pihco
        FCnNJfP5Pv3O0znOWdue85zjnDrf+nT+z+/3v/x+z3me539JSymllFJKa2trS4dqu0wuWfAtsMdMyaOg
        4KXkSoCAA8G/hDNJlQDBZsIleAJDFLwwd2KLQEOCN1tyJECQYcFLCl7YZWKKACPd+ceQB4mdAMH1htOg
        F3YYZENPyDW/EvgKrzrgOegm7IPNUAbdnEFiJQYICd5szVDlVECUZ8DKTrAG6mEXnIcf8A4aYKB155/o
        9N87PwoKzB0mfL2gwsqTQP9UDpSZrQL0z8neAwbAMngGn0AJ+vOP0FGkO18Ly50KEYQvF5qsvA2mwFRo
        MNsxGAxHYA6UgxJVMur7MxyCdNX3LDpQ8KcgcOcLocbcvok+50ElTIMxUABP4RZkWrWui8Z94BoEEhgN
        teb2XfRdA5VWzoKHoH/J++NEYyVxFdxHKNZinEdQBCNA78Q6c3kTHSiJKxCXJBijP2hpogSq4Rvkmdub
        6EAT2GVoNwnss2FjJ1gLiyDfmoYJ3wKos/IN2Os4ohGdBGbhiElg00T2Ee53gGbxD/AHGiHitx+7Pr3F
        MBNaIctc3kUn7SbBdZeWEtTVp1UJvQBnNg8WNn2Z6qA7KOGF5opOdKQkLkJIEpS7vBaivvq6Di1mChH2
        fNDEqGVHo5mjF51lwAVwk+DX02KONsPhJ5SayRU2LVf0CK2GO2b2R3SoJLSWcZIATwlItNOLuskuw4Rv
        PryxS/9Ep8FJeN5S0u4A7LRLV9g2wHrQLN1qZn9Fx0riHEheE1D7ert0ha2voTXTezP7LzrX5v4seHkH
        9Ln8DuVmcoVtK0wALcMfmDk2YgBPB1u02a/gIGzNg00vsJbdO6DZzIkhAhoEB+ELlJjZFbZSWGrl17DC
        ccRTDKr9QFME9LhpjXMPiq16iLBr9VsFE+E3hE12MReDaqa9Cc4nNgglpo1MxKUy9lmw2MraAJ1wHPEW
        AyuBVXbZadFmPEwH7eY0yRWZK75i4C4nQH1torTv1rJaJxi7zRV/MXinE6CeHpsSGAla/5yEu5BhVeIv
        Bu8wAfyTYRxoj6D3oh8ch7cw1Kr9HxGAkwC4BwL86jBLs6smKT3nS2Cu+TRpaUt5G9rd8MRNBBFIwD0Q
        4HcLaNOu73y22cbCYdDGZTtEd6TilwhECSggbU6C0V5XB1g6ndMk9QuOQqE1TQwRkBKIJB1e6dhE33gd
        p+RYk5RSSimlpFNa2l//HtWJUQH7MAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>